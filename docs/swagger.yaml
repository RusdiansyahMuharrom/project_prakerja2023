basePath: /
definitions:
  model.BookRequest:
    type: object
  model.ResponseError:
    properties:
      error: {}
      message:
        type: string
    type: object
  model.ResponseOK:
    properties:
      data: {}
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is a dedicated API Pengolahan Data Buku Perpustakaan.
  title: API Pengolahan Data Buku Perpustakaan
  version: Development 1.0
paths:
  /books:
    get:
      operationId: get-buku-all
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Get Data Buku All
      tags:
      - Book
    post:
      consumes:
      - application/json
      description: Semua wajib diisi kecuali keterangan
      operationId: insert-buku
      parameters:
      - description: Request Body
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/model.BookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Insert Data Buku
      tags:
      - Book
  /books/{id}:
    delete:
      operationId: delete-buku
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Delete Data Buku
      tags:
      - Book
    get:
      operationId: get-buku-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Get Data Buku By Id
      tags:
      - Book
    put:
      consumes:
      - application/json
      description: Semua wajib diisi kecuali keterangan
      operationId: update-buku
      parameters:
      - description: Request Body
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/model.BookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Update Data Buku
      tags:
      - Book
swagger: "2.0"
